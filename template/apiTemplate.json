{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Creates Lambda function, API Gateway and CustomResource CloudFormation handler. Template Version 2.2.0",
    "Parameters": {
      "APIName": {
         "Description": "CardTransactionHistory",
         "Type": "String",
         "AllowedPattern": "[A-Za-z0-9]*",
         "MinLength": "4",
         "MaxLength": "2048",
         "ConstraintDescription": "must contain only alphanumeric characters (at least four)",
         "Default":"CardTransactionHistory"
      },
      "APIDescription": {
         "Description": "Gets card transaction history.",
         "Type": "String",
         "Default": "No description provided. Provide 'APIDescription' param to override this."
      },
      "APIPath": {
         "Description": "cardTransactionHistory",
         "Type": "String",
         "Default": "cardTransactionHistory",
         "AllowedPattern": "[A-Za-z0-9]*",
         "MinLength": "1",
         "MaxLength": "64",
         "ConstraintDescription": "must contain only alphanumeric characters (1-64 chars)"
      },
      "APIStageName": {
         "Description": "dev",
         "Type": "String",
         "Default": "dev",
         "AllowedPattern": "[A-Za-z0-9]*",
         "MinLength": "1",
         "MaxLength": "64",
         "ConstraintDescription": "must contain only alphanumeric characters (1-64 chars)"
      },
      "LambdaCodeBucket": {
         "Description": "artifact-manas",
         "Type": "String",
         "Default":"artifact-manas"
      },
      "LambdaCodePath": {
         "Description": "handler/Archive.zip",
         "Type": "String",
         "Default": "handler/Archive.zip"
      },
      "DynamoReadCapacityUnits": {
         "Description": "1",
         "Type": "Number",
         "Default": "1",
         "MinValue": "1",
         "MaxValue": "10000",
         "ConstraintDescription": "must be between 1 and 10000"
      },
      "DynamoWriteCapacityUnits": {
         "Description": "1",
         "Type": "Number",
         "Default": "1",
         "MinValue": "1",
         "MaxValue": "10000",
         "ConstraintDescription": "must be between 1 and 10000"
      }
   },
    "Resources": {
      "CardTransactionHistoryFn": {
        "Type": "AWS::Serverless::Function",
        "Properties": {
          "Handler": "CardTransactionHistory.handler",
          "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
          "FunctionName": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, { "Ref": "APIName" } ] ] },
          "CodeUri": "./../handler",
          "Runtime": "nodejs6.10"
        }
      },
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": { "Service": ["lambda.amazonaws.com"] },
              "Action": ["sts:AssumeRole"]
            }]
          },
          "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"]
        }
      },
      "LambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:invokeFunction",
          "FunctionName": {"Fn::GetAtt": ["CardTransactionHistoryFn", "Arn"]},
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "CardTransactionHistoryAPI"}, "/*"]]}
        }
      },
      "CardTransactionHistoryAPI": {
         "Type": "AWS::ApiGateway::RestApi",
         "Properties": {
            "Name": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, { "Ref": "APIName" } ] ] },
            "Description": "Credit Card transation history.",
            "FailOnWarnings":false
         }
      },
      "CardTransactionHistoryAPIResource": {
         "Type": "AWS::ApiGateway::Resource",
         "Properties": {
            "RestApiId": { "Ref": "CardTransactionHistoryAPI" },
            "ParentId": { "Fn::GetAtt": [ "CardTransactionHistoryAPI", "RootResourceId" ] },
            "PathPart": { "Ref": "APIPath" }
         }
      },
      "ApiDeployment": {
        "Type": "AWS::ApiGateway::Deployment",
        "DependsOn": ["CardTransactionHistoryAPIMethodGet"],
        "Properties": {
          "RestApiId": {"Ref": "CardTransactionHistoryAPI"},
          "StageName": "dev"
        }
      },
      "CardTransactionHistoryAPIMethodGet": {
        "DependsOn": "LambdaPermission",
         "Type": "AWS::ApiGateway::Method",
         "Properties": {
            "AuthorizationType": "NONE",
            "RestApiId": { "Ref": "CardTransactionHistoryAPI" },
            "ResourceId": { "Ref": "CardTransactionHistoryAPIResource" },
             "HttpMethod": "GET",
             "RequestParameters": {
                "querystring.cardNumber": true,
                "querystring.startDate": true,
                "querystring.endDate": true
             },
            "Integration": {
               "Type": "AWS",
               "Uri": {"Fn::Join": ["",
                  ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["CardTransactionHistoryFn", "Arn"]}, "/invocations"]
                ]},
                "PassthroughBehavior":"WHEN_NO_TEMPLATES",
                "IntegrationResponses": [{
                  "StatusCode": 200
                }],
               "IntegrationHttpMethod": "POST",
               "RequestTemplates": {
                 "application/json": {"Fn::Join": ["", [
                   "{",
                   "  \"cardNumber\": \"$input.params('cardNumber')\",",
                   "  \"startDate\": \"$input.params('startDate')\",",
                   "  \"endDate\": \"$input.params('endDate')\"",
                   "}"
                 ]]}
               }
            },
           "RequestParameters": {
              "method.request.querystring.cardNumber": true,
              "method.request.querystring.startDate": true,
              "method.request.querystring.endDate": true

           },
           "MethodResponses": [{
              "StatusCode": 200
            }]
         }
      }
    }
}
